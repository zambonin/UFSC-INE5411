5.2.1   a)  4                               b)  4

5.2.2   a)  i, j                            b)  i, j, b[j][0]

5.2.3   a)  A[i][j]                         b)  A[j][i]

5.2.4   64000 elements from A + 8 elements from B = 64008 integers
        = 256032 bytes / 16 bytes per line
        = 16002 lines

5.2.5   a)  i, j                            b)  i, j, b(j, 0)

5.2.6   a)  A(j, i), B(j, 0)                b)  A(i, j)

5.3.1   a)  Address         Tag         Block       Hit?
            00000001 (1)    0000 (0)    0001 (1)    N
            10000110 (134)  1000 (8)    0110 (6)    N
            11010100 (212)  1101 (13)   0100 (4)    N
            00000001 (1)    0000 (0)    0001 (1)    Y
            10000111 (135)  1000 (8)    0111 (7)    N
            11010101 (213)  1101 (13)   0101 (5)    N
            10100010 (162)  1010 (10)   0010 (2)    N
            10100001 (161)  1010 (10)   0001 (1)    N
            00000010 (2)    0000 (0)    0010 (2)    N
            00101100 (44)   0010 (2)    1100 (12)   N
            00101001 (41)   0010 (2)    1001 (9)    N
            11011101 (221)  1101 (13)   1101 (13)   N

        b)  Address         Tag         Block       Hit?
            00000110 (6)    0000 (0)    0110 (6)    N
            11010110 (214)  1101 (13)   0110 (6)    N
            10101111 (175)  1010 (10)   1111 (15)   N
            11010110 (214)  1101 (13)   0110 (6)    Y
            00000110 (6)    0000 (0)    0110 (6)    N
            01010100 (84)   0101 (5)    0100 (4)    N
            01000001 (65)   0100 (4)    0001 (1)    N
            10101110 (174)  1010 (10)   1110 (14)   N
            01000000 (64)   0100 (4)    0000 (0)    N
            01101001 (105)  0110 (6)    1001 (9)    N
            01010101 (85)   0101 (5)    0101 (5)    N
            11010111 (215)  1101 (13)   0111 (7)    N

5.3.2   a)  Address         Tag         Block       Offset  Hit?
            00000001 (1)    0000 (0)    000 (0)     1       N
            10000110 (134)  1000 (8)    011 (3)     0       N
            11010100 (212)  1101 (13)   010 (2)     0       N
            00000001 (1)    0000 (0)    000 (0)     1       Y
            10000111 (135)  1000 (8)    011 (3)     1       Y (by offset)
            11010101 (213)  1101 (13)   010 (2)     1       Y (by offset)
            10100010 (162)  1010 (10)   001 (1)     0       N
            10100001 (161)  1010 (10)   000 (0)     1       N
            00000010 (2)    0000 (0)    001 (1)     0       N
            00101100 (44)   0010 (2)    110 (6)     0       N
            00101001 (41)   0010 (2)    100 (4)     1       N
            11011101 (221)  1101 (13)   110 (6)     1       N

        b)  Address         Tag         Block       Offset  Hit?
            00000110 (6)    0000 (0)    011 (3)     0       N
            11010110 (214)  1101 (13)   011 (3)     0       N
            10101111 (175)  1010 (10)   111 (7)     1       N
            11010110 (214)  1101 (13)   011 (3)     0       Y
            00000110 (6)    0000 (0)    011 (3)     0       N
            01010100 (84)   0101 (5)    010 (2)     0       N
            01000001 (65)   0100 (4)    000 (0)     1       N
            10101110 (174)  1010 (10)   111 (7)     0       Y (by offset)
            01000000 (64)   0100 (4)    000 (0)     0       Y (by offset)
            01101001 (105)  0110 (6)    100 (4)     1       N
            01010101 (85)   0101 (5)    010 (2)     1       Y (by offset)
            11010111 (215)  1101 (13)   011 (3)     1       N

5.3.4   n = log_2 words per block       m = log_2 block size
        cache size in bits = 2^n * (2^(m+5) + 31 - n - m)

        a)  64KB = 2^14 words, n = 14           block size = 1, m = 0
            cache size = 2^14 * (2^5 + 31 - 14 - 0) = 2^14 * 49 = 802816 bits

        b)  2^14 / 2 blocks = 2^13, n = 13      block size = 2, m = 1
            cache size = 2^13 * (2^6 + 31 - 13 - 1) = 2^13 * 81 = 663552 bits

5.4.1   a)  2^4 / 4 = 4 (possible combinations from offset in words)
        b)  2^5 / 4 = 8

5.4.2   a)  2^6 = 64 (quantity of index bits)
        b)  2^7 = 128

5.4.3   a)  (2^5 * (16*8 + 22 + 1)) / (2^5 * (16*8)) = 151/128 (adding tag and
        b)  (2^5 * (32*8 + 20 + 1)) / (2^5 * (32*8)) = 277/256  dirty bits)

5.4.4   block address = floor(byte address / block size in bytes)
        block index = block address modulo block quantity

        a)  cache with 64 blocks, each with four words

            Data                Address        Tag       Index     Hit/Replaced
            000000000000 (0)    00000000 (0)   0000 (0)  0000 (0)  N/N
            000000000100 (4)    00000000 (0)   0000 (0)  0000 (0)  Y/N
            000000010000 (16)   00000001 (1)   0000 (0)  0001 (1)  N/N
            000010000100 (132)  00001000 (8)   0000 (0)  1000 (8)  N/N
            000011101000 (232)  00001110 (14)  0000 (0)  1110 (14) N/N
            000010100000 (160)  00001010 (10)  0000 (0)  1010 (10) N/N
            010000000000 (1024) 01000000 (64)  0100 (4)  0000 (0)  N/Y
            000000011110 (30)   00000001 (1)   0000 (0)  0001 (1)  Y/N
            000010001100 (140)  00001000 (8)   0000 (0)  1000 (8)  Y/N
            110000011100 (3100) 11000001 (193) 1100 (12) 0001 (1)  N/Y
            000010110100 (180)  00001011 (11)  0000 (0)  1011 (11) N/N
            100010000100 (2180) 10001000 (136) 1000 (8)  1000 (8)  N/Y

        b)  cache with 128 blocks, each with eight words

            Data                Address        Tag       Index     Hit/Replaced
            000000000000 (0)    0000000 (0)    00 (0)    00000 (0) N/N
            000000000100 (4)    0000000 (0)    00 (0)    00000 (0) Y/N
            000000010000 (16)   0000000 (0)    00 (0)    00000 (0) Y/N
            000010000100 (132)  0000100 (4)    00 (0)    00100 (4) N/N
            000011101000 (232)  0000111 (7)    00 (0)    00111 (7) N/N
            000010100000 (160)  0000101 (5)    00 (0)    00101 (5) N/N
            010000000000 (1024) 0100000 (32)   01 (1)    00000 (0) N/Y
            000000011110 (30)   0000000 (0)    00 (0)    00000 (0) N/Y
            000010001100 (140)  0000100 (4)    00 (0)    00100 (4) Y/N
            110000011100 (3100) 1100000 (96)   11 (3)    00000 (0) N/Y
            000010110100 (180)  0000101 (5)    00 (0)    00101 (5) Y/N
            100010000100 (2180) 1000100 (68)   10 (2)    00100 (4) N/Y

5.4.5   a)  3/12 = 25%                      b)  4/12 = 33.3%

5.4.6   a)  Index   Tag     Data            b)  Index   Tag     Data
            0000    0100    mem[1024]           00000   11      mem[3072]
            0001    1100    mem[3088]           00100   10      mem[2176]
            1000    1000    mem[2176]           00101   00      mem[160]
            1010    0000    mem[160]            00111   00      mem[224]
            1011    0000    mem[176]
            1110    0000    mem[224]

